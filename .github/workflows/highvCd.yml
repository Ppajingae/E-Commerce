name: highv
on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setting application.yml
        run: |
          sed -i 's/${MYSQL_USERNAME}/${{ secrets.MYSQL_USERNAME }}/g' src/main/resources/application.yml
          sed -i 's/${MYSQL_URL}/${{ secrets.MYSQL_URL }}/g' src/main/resources/application.yml
          sed -i 's/${MYSQL_PASSWORD}/${{ secrets.MYSQL_PASSWORD }}/g' src/main/resources/application.yml
          sed -i 's/${REDIS_HOST}/${{ secrets.REDIS_HOST }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_USERNAME}/${{ secrets.MAIL_USERNAME }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.MAIL_PASSWORD }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.KAKAO_CLIENT_ID }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.NAVER_CLIENT_ID }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.NAVER_CLIENT_SECRET }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.AUTH_ISSUER }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.AUTH_SECRET }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.AWS_BUCKET }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.AWS_ACCESS_KEY }}/g' src/main/resources/application.yml
          sed -i 's/${MAIL_PASSWORD}/${{ secrets.AWS_SECRET_KEY }}/g' src/main/resources/application.yml

      - name: Setting docker-compose.yml
        run: |
          sed -i 's/${MYSQL_USERNAME}/${{ secrets.MYSQL_ROOT_PASSWORD }}/g' docker-compose.yml
          sed -i 's/${MYSQL_URL}/${{ secrets.MYSQL_USERNAME }}/g' docker-compose.ymll
          sed -i 's/${MYSQL_PASSWORD}/${{ secrets.MYSQL_PASSWORD }}/g' docker-compose.yml
          sed -i 's/${REDIS_HOST}/${{ secrets.MYSQL_URL }}/g' docker-compose.yml

      - name: Set JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to aws
        run: |
          mv build/libs/E-Commerce-0.0.1-SNAPSHOT.jar ./api/E-Commerce.jar
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-3-39-224-3.ap-northeast-2.compute.amazonaws.com 'bash -s' << 'EOF'
          cd /spring
          git clone https://github.com/highVTest/E-Commerce.git
          cd /E-Commerce
          git init
          git remote add origin https://github.com/highVTest/E-Commerce
          git pull origin dev
          docker-compose up --build
          EOF
